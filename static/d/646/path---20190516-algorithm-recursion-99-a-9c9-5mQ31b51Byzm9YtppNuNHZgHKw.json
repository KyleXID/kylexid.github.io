{"data":{"post":{"id":"3bcc5857-ea89-5722-807d-e637554eae6c","html":"<h2>재귀(Recursion)</h2>\n<hr>\n<p>재귀는 알고리즘은 아니지만, 알고리즘 문제를 풀 때 자주 사용되는 프로그래밍 패턴이라고 배워서 정리하게 되었다.</p>\n<ul>\n<li>\n<p>함수 실행 내부에서 다시 함수 자신을 호출하는 것을 재귀라고 한다.</p>\n<ul>\n<li>다시 자신을 호출하면서 코드가 무한 반복이 되기 때문에, 적절한 조건과 걸어두어, 필요한 만큼 반복 후 return 될 수 있도록 만든다.</li>\n</ul>\n</li>\n<li>\n<p>codekata나 다른 예제들을 참고하여 자주 눈에 익히는 것이 좋을 것 같다.</p>\n</li>\n</ul>\n<h4>재귀를 사용한 코드카타. string을 인자로 받을 때 reverse해서 출력하는 재귀함수를 구현하였다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">reverseString</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    a <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>reverseString<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>reverseString<span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>다른 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">reverseString</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">return</span> reverseString<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>","fields":{"slug":"/20190516-algorithm_Recursion/","prefix":"2019-05-16"},"frontmatter":{"title":"재귀(Recursion)","author":"KyleXID","category":"Algorithm","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/20190516-algorithm_Recursion/","prev":{"id":"3010c567-c4e3-57b4-8891-980627746a23","fields":{"slug":"/20190516TIL/","prefix":"2019-05-16","source":"posts"},"frontmatter":{"title":"pass,return,continue,break","category":"TIL"}},"next":{"id":"4cbcc4c2-4c17-5b3f-998d-2baa248dedda","fields":{"slug":"/20190517TIL/","prefix":"2019-05-17","source":"posts"},"frontmatter":{"title":"장고 get_or_create","category":"TIL"}},"source":"posts"}}