{"data":{"post":{"id":"c2082915-c23e-512b-8b86-c4321228775b","html":"<h2>딕셔너리 정렬</h2>\n<br/>\n### 1.Key를 기준으로 정렬하기\n<br/>\n```python\n>>> sort(dic)\n```\n을 해주면 dic 안의 key를 올림차순으로 정렬한 리스트를 반환해준다.\n<p>이때 key가 아닌 value로 정렬하려면 lambda를 사용해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> dic<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>를 해주면 value값을 기준으로 정렬한 리스트를 반환해 준다.\n내림차순은 <code class=\"language-text\">reverse = True</code>라는 옵션을 뒤에 붙여주면 된다.</p>\n<h3>2.items() 정렬</h3>\n<p>딕셔너리에 .items() 메서드를 사용해주면 <code class=\"language-text\">key : value</code>의 형태를 <code class=\"language-text\">(key, value)</code>의 형태로 바꿔서 list를 만들\n어 준다.\n이를 sorted해주면 key값을 기준으로 오름차순으로 정렬해준다.\nvalue값으로 정렬하려면 lambda를 사용해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위에서 사용한 lambda와 아래 사용한 lambda의 차이를 인지하자.</p>\n<p>위는 딕셔너리에 접근하였고, 아래는 튜플에 접근하여 사용하기때문에, 해당 value값이 위치한 곳에 접근하기 위\n함임을 알아두어야 한다.</p>\n<h3>3.itemgetter를 사용한 정렬</h3>\n<p>파이썬에서 제공하는 itemgetter를 사용하여 딕셔너리를 정렬 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> operator <span class=\"token keyword\">import</span> itemgetter\ndic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'wecode'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ryan'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wework'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\nsortdic <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">,</span> key <span class=\"token operator\">=</span> itemgetter<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> sortdic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'wecode'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wework'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ryan'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">itemgetter</code>안에는 키값이 들어갈수도 있고, 인덱스를 넣어줄수도 있다.<br>\n위의 예제는 0번쨰 인덱스 즉, 정렬기준은 key자체가 된다.<br>\n먄약 인자를 1로 바꿔주면</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> sortdic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'wecode'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ryan'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wework'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>으로 나올 것이다. 인자1은 value 기준에 따라 오름차순으로 정렬해 준다.<br>\n<code class=\"language-text\">itemgetters</code>는 안에 하나이상의 값이 들어가면 먼저 기준에 따라 정렬하고, 동일한 값이 나올 경우 다음 기준으로 다시 정렬한다.<br>\n마지막에 옵션으로 <code class=\"language-text\">reverse=True</code>를 해주면 내림차순으로 정렬이 된다.</p>\n<h4>응용</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> operator <span class=\"token keyword\">import</span> itemgetter\n  \n                <span class=\"token punctuation\">.</span>\n                <span class=\"token punctuation\">.</span>\n                <span class=\"token punctuation\">.</span>\n    total_hearts_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"img_id\"</span>       <span class=\"token punctuation\">:</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">'pk'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"total_hearts\"</span> <span class=\"token punctuation\">:</span> Cloth<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">'pk'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>total_hearts\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> hearts_list\n    <span class=\"token punctuation\">]</span>\n    data <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>total_hearts_list<span class=\"token punctuation\">,</span> key <span class=\"token operator\">=</span> itemgetter<span class=\"token punctuation\">(</span><span class=\"token string\">'total_hearts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                      </code></pre></div>\n<p><code class=\"language-text\">total_hearts_list</code>라는 list에서 key가 <code class=\"language-text\">totla_hearts</code>인 값들을 오름차순으로 정렬한 code이다.<br>\n<code class=\"language-text\">itemgetter</code>에는 하나 이상의 값을 넣어서 순서대로 정렬시킬 수 있다.   </p>","fields":{"slug":"/20190522python_dic_sort/","prefix":"2019-05-22"},"frontmatter":{"title":"파이썬에서 딕셔너리 정렬하기","author":"KyleXID","category":"TIL","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/20190522python_dic_sort/","prev":{"id":"023bff42-aa02-5dd8-83e9-f8f03081c32e","fields":{"slug":"/20190522TIL/","prefix":"2019-05-22","source":"posts"},"frontmatter":{"title":"20190522 TIL","category":"TIL"}},"next":{"id":"409a604f-6a4e-5db3-a1d7-76c2090edb6f","fields":{"slug":"/20190522git_rebase/","prefix":"2019-05-22","source":"posts"},"frontmatter":{"title":"Git rebase","category":"GitHub"}},"source":"posts"}}