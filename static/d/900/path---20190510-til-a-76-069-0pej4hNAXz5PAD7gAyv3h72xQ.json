{"data":{"post":{"id":"db2ed17c-5ba1-5c41-b760-92413dedb74e","html":"<h1>random 모듈</h1>\n<p>파이썬은 random모듈이 존재한다. </p>\n<p>random을 import하여 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같이 사용할 경우. 0이상 1미만의 숫자 중에서 아무 숫자를 하나 뽑아서 돌려준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>1부터 9까지 정수중 임의로 하나를 얻는 방법이다.</p>\n<p>나는 이번 프로젝트에서 날씨에 알맞는 옷을 불러올때 옷 리스트를 랜덤으로 섞어주기 위해 사용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>object라는 자료를 임의로 섞어주는 역할을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\ntemp_clothes_F <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>temper_filter<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user_gender<span class=\"token operator\">=</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'img_ref'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrandom<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>temp_clothes_F<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 경우는 temp<em>clothes</em>F에서 하나의 요소를 랜덤하게 추출하여 보여주는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\nrandom_clothes <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span>my_temp_clothes<span class=\"token punctuation\">,</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>my_temp_clothes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이렇게 하면 my<em>temp</em>clothes라는 자료에서 그 자료의 길이 또는 10개 중 작은 값만큼 랜덤하게 추출할 수 있다.</p>\n<h1>exist()</h1>\n<p>장고의 QuerySet에서 해당 값이 있는지 없는지 확인하는 메서드이다.<br>\n나같은 경우에는 유저의 아이디 중복 체크를 할 때 사용했다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user_name<span class=\"token operator\">=</span>new_user<span class=\"token punctuation\">[</span><span class=\"token string\">'user_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> JsonResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'이미 존재하는 아이디입니다.'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>만약 존재하면 True값을 반환하여 if문 다음단게로 넘어갈 것이다.</p>\n<p>나는 맨 처음 try, except 를 이용하여 get을 썼을때 ObjectDoesNotExist의 에러메세지가 날 경우로 나누어 생각하려 했지만 상단과 같은 방법이 훨씬 효율적일 것 같아서 상단의 방법을 사용했다.</p>\n<h1>git checkout TIP</h1>\n<p>git checkout을 할때 checkout을 하면서 바로 branch를 생성하는 방법\ngit checkout -b feature/clothes를 사용하면 새로운 branch를 생성하면서 checkout이 된다.</p>\n<br/>\n<h1>AWS 정리</h1>\n<h3>load balancer</h3>\n<ul>\n<li>\n<p>트래픽 분산시켜줌</p>\n</li>\n<li>\n<p>서버를 알아서 분산시켜줌 (사실은 서버가 엄청많은데 마치 하나인것처럼 인식하게 됨)</p>\n</li>\n<li>\n<p>반대되는 개념</p>\n<ul>\n<li>서버하나에 바로 사람이 붙는것</li>\n<li>사람이 많아져서 서버를 늘릴때 서버주소가 너무많아져서 못외움</li>\n</ul>\n</li>\n</ul>\n<h3>Route53</h3>\n<ul>\n<li>DNS : url주소 연결해주는것(DNS라는 서버가 연결시켜줌) 도메인과 연결\n사람이 기억할 수 있는 주소로 실시간으로 매핑.</li>\n</ul>\n<h3>AWS S3</h3>\n<ul>\n<li>파일을 저장할 수 있는 공간을 서비스함</li>\n<li>파일 저장해서 불러와줌 (서버에 저장하는것보다 속도면이나 여러부분에서 이득)</li>\n</ul>\n<h3>AWS</h3>\n<p>지역설정이 중요함\n가까이 있는 곳에 있어야 속도가 빠르기 때문임</p>\n<p>아이디 root\n비밀번호 ****</p>\n<p>한국어 입력을 위해 파라미터 그룹을 생성해야함\nutf8mb4인 이유는? 옛날에 잘못만들어서 새로만든거 원래는 utf8이 맞다.  </p>\n<p>원래 mysql은 파라미터그룹이 있지않음 로컬로 설치했을때 설정파일이 존재함 my.enf라는 설정파일을 수정해야함  </p>\n<p>rds 는 알아서 쉽게 설정하게 서비스함 웹사이트에서 접속해서 설정해야함  </p>\n<p>대시보드 다시 가서 모디파이눌러서 데이터베이스 옵션가서 디비 파라미터 그룹을 korean 그룹으로 바꿔주자  </p>\n<p>컨티뉴하고<br>\nApply immediately  </p>\n<p>ec2\n보안쪽으로 안좋은 쪽임,, 프로젝트 성격상  </p>\n<p>어떤식으로접속하는지 제한하도록하는거  </p>\n<p>열어줘야하는 프로토콜이 http  </p>\n<p>서버에 접속할때는 아이디가아니라 key가 필요함 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  ~ ssh -i ~/BackProject/django_project/pem키 운영체제@공용ip</code></pre></div>\n<p>에러뜨는 이유 :  파일이 너무 일반적으로 저장되서</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  ~ sudo chmod 400 ~/BackProject/django_project/pem 키</code></pre></div>\n<p>하면 읽을 수있어짐</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  ~ ssh -i ~/BackProject/django_project/pem키 aws운영체제(ubuntu)@퍼블릭 아이피</code></pre></div>\n<p>깃허브 이용하기위해 디플로이 키라는 것을 사용함 이것도 ssh 키임.<br>\n하나의 레포지토리만 읽을 수 있음.<br>\ngit아이디비번쓰기엔 서버에 본인의 정보가 들어갈수있기때문  </p>\n<ol>\n<li>ssh key  </li>\n<li>git설정  </li>\n<li>clone  </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ubuntu@ip-172-31-27-44:~$ ls ~/.ssh/\nauthorized_keys  id_rsa  id_rsa.pub\nubuntu@ip-172-31-27-44:~$ cat ~/.ssh/id_rsa.pub</code></pre></div>\n<p>해서 나온 값 확인\n복사해서 깃헙 드플로이에 업로드 허가 되면 그후 깃클론함.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(base) ubuntu@ip-172-31-27-44:~$ conda create --name django python=3.7</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nohup python manage.py runserver</code></pre></div>\n<p>마이셋팅에 <del></del><del></del>~.rds.amazonaws.com라는 호스트를 입력해야함. 아마존 호스트!</p>\n<h3>ssl 에러 나는 이유</h3>\n<p>오픈소스 드라이버, 공식소스 드라이버가있는데 문제가많음<br>\nmysqlclient 삭제하고<br>\npip install mysql-connector-python로 바꿔야함<br>\n엔진 mysql.connector.django  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  ~ http -v POST 퍼블릭아이피:8000/user</code></pre></div>\n<h3>mysql 호스트로 들어가는 법</h3>\n<p>mysql -h <del></del><del></del><del></del><del></del><del></del>~rds.amazonaws.com -u root -p\n-h 호스트 뜻</p>\n<h3>서버 돌리는 것(글로벌)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nohup python manage.py runserver 0.0.0.0:8000 &amp;</code></pre></div>\n<p>runserver 뒤의 뜻은 모두 접속하게 허용한다는 뜻</p>\n<h3>서버 끄는 것</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ps aux | grep django  \nkill -TERM 2305  </code></pre></div>\n<p>kill 2305 차이는?<br>\n-TERM은 옵션이다. TERM을 주고 끄라는 뜻</p>\n<h3>CORS 문제 해결</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">ALLOWED_HOSTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'본인백엔드 퍼블릭아이피'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>셋팅에 위의 값을 넣어주어야 cors 옵션을 해결할 수 있다.<br>\n프론트 역시 엔드포인트 주소를 백엔드 주소로 바꾸어 주어야한다.</p>\n<h3>프론트 서버 돌리기</h3>\n<p>node를 설치해야됨<br>\npackage.json 의 scripts는 커맨드임. </p>\n<p><code class=\"language-text\">npm run build</code> -> 프론트 파일을 압축시켜서 서버 실행.<br>\n<code class=\"language-text\">npm run start</code> -> 하나하나 다 보여주는 것, 보통 개발단계에서 많이 쓴다.<br>\n<code class=\"language-text\">npm install</code>-> 패키지.json을 자동으로 읽어서 거기안에있는걸 설치함<br>\n설치 후에는  </p>\n<ul>\n<li>node_modules가 생김 보통 이건 .gitignore에 넣어둠</li>\n</ul>","fields":{"slug":"/20190510TIL/","prefix":"2019-05-10"},"frontmatter":{"title":"random함수, exist(), git branch, aws 정리","author":"KyleXID","category":"TIL","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/20190510TIL/","prev":{"id":"6dd3d74b-5b36-5153-8287-b60d9877f7d5","fields":{"slug":"/20190509TIL/","prefix":"2019-05-09","source":"posts"},"frontmatter":{"title":"코드 정리, 파이썬 get함수, hasattr","category":"TIL"}},"next":{"id":"9c2cde2e-10c3-56dc-b1ec-a53398f71c55","fields":{"slug":"/20190513-binary_search/","prefix":"2019-05-13","source":"posts"},"frontmatter":{"title":"이진 탐색(Binart Search)","category":"Algorithm"}},"source":"posts"}}