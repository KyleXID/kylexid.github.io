{"data":{"post":{"id":"b167c183-4708-5bb1-ab59-6992cc8b798f","html":"<h2>장고 모델의 클래스에 column을 추가하면서 생기는 충돌</h2>\n<br/>\n<span style=\"color:red;\">user.Profile.user: (fields.E303) Reverse query name for 'Profile.user' clashes with field name 'User.profile'.</span>  \n<span style=\"color:red;\">HINT: Rename field 'User.profile', or add/change a related_name argument to the definition for field 'Profile.user'.</span>\n<p>프로젝트 진행중 프로필 모델을 굳이 나눌 필요가 없어보여서 유저모델에 병합하는 과정 중 발생한 문제이다.  </p>\n<p>이는 프로필클래스에서 유저에 포린키로 연결을 했는데<br>\n포린키로 연결한 클래스의 column에 profile이라는 클래스와 동일한 이름이 있어 생기는 충돌이다.  </p>\n<br/>\n이 경우에는 일단 user클래스 내부에 column을 임시 이름으로 설정해주고  \n<p>profile 클래스 내부의 데이터를 user클래스의 프로필에 추가시켜준 뒤<br>\n다시 user클래스의 column이름을 수정해주면 된다.  </p>\n<br/>\n<h1>이를 위해 할 수 있는 방법</h1>\n<p><strong>1. 데이터 옮겨넣기</strong>  </p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">sqlite&gt; update user_user set profile_text = (select profile_text from user_profile where user_id = id);</code></pre></div>\n<p>프로필 모델의 id와 유저모델의 id가 같은 경우 프로필모델의 프로필내용(profile_text)을 유저모델의 프로필 내용에 넣어준다는 뜻이다.</p>\n<br/>\n**2. 데이터 입력 후 삭제**  \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlte&gt; update user_user set profile_text = &quot;hi&quot; where id = 1;</code></pre></div>\n<p>id가 1인 user클래스에 hi라는 값을 지정하는경우이다.<br>\n이는 옮겨넣는 과정이 아니라 직접 채우는방법으로,, 실제로는 못쓸듯하고 지금 나같이 유저 id가 1개뿐일때나 사용가능 할듯 하다.<br>\n맨 뒤의 where id = 1부분을 입력하지 않으면 모든 id의 profile이 hi로 통일된다.</p>","fields":{"slug":"/20190426TIL/","prefix":"2019-04-26"},"frontmatter":{"title":"Collision when adding column to Django model class","author":"KyleXID","category":"TIL","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/20190426TIL/","prev":{"id":"e33f12bc-e135-5e3d-9639-1bec72322bc0","fields":{"slug":"/20190425js_object_sorting/","prefix":"2019-04-25","source":"posts"},"frontmatter":{"title":"자바스크립트 값에 따라 객체 정렬","category":"JavaScript"}},"next":{"id":"89505aab-6396-5f01-aaba-17c7295307ef","fields":{"slug":"/20190429python_map/","prefix":"2019-04-29","source":"posts"},"frontmatter":{"title":"Python map()","category":"Python"}},"source":"posts"}}