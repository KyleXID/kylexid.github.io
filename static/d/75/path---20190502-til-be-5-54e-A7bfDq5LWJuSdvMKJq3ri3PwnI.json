{"data":{"post":{"id":"5b6c7ab0-ad50-5db4-ac91-ad4957d8fdaf","html":"<h1>엔드포인트 url 작성 tip</h1>\n<ul>\n<li>\n<p>일반적으로 엔드포인트에 요청을 할 때 <code class=\"language-text\">POST</code>, <code class=\"language-text\">GET</code>등으로 request를 보내게 된다. 이때 <code class=\"language-text\">GET</code>과 <code class=\"language-text\">POST</code>자체만으로도 동사의 의미를 갖고 있으므로, 예를들어 유저의 정보를 본다고 했을때 굳이 <code class=\"language-text\">user/info</code> 같이 엔드포인트를 만들 필요가 없다는 말이다. 왜냐하면 user라는 엔드포인트에서 <code class=\"language-text\">GET</code>한다는 것 자체가 유저의 정보를 불러온다는 의미이기 때문이다.</p>\n</li>\n<li>\n<p>이렇게 되면 django를 사용시 프로젝트 내부에서 앱의 path를 설정해 줄 때 ‘user’로 해주고, 앱내부에서 추가 경로가 있을시에 ‘/auth’이런식으로 붙여주는게 좋다.</p>\n</li>\n</ul>\n<br/>\n<h1>코드 정리하는 tip</h1>\n<ul>\n<li>\n<p>코드를 정리할수록 가독성이 좋아지니 그때 그때 고쳐나가는 것이 좋은 것 같다고 생각한다…\ndjango에서 import를 할 경우, from과 import가 있는 경우, from과 import가 있는 경우에서도 django 내부 파일에서 import하는것과 내가 만든 파일에서 import하는 것 이런식으로 나누어서 정리하자.</p>\n</li>\n<li>\n<p>python에서 데코레이터를 사용할 때 코드 팁</p>\n</li>\n<li>\n<p>일반적으로 데코레이터를 사용하게 되면, 그 함수는 실질적으로 그 파일 내부에서 보여지는것이 아니기 때문에, 관련 파일과 같은 경로에 utils.py와 같은 파일에 따로 데코레이터 함수를 넣어서 import 해서 쓰는 것이 깔끔하게 쓰기에 좋다.</p>\n</li>\n</ul>","fields":{"slug":"/20190502TIL/","prefix":"2019-05-02"},"frontmatter":{"title":"엔드포인트 url 작성팁, 코드 정리","author":"KyleXID","category":"TIL","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/20190502TIL/","prev":{"id":"d6ef8f15-6ad4-50e4-8dc7-8a675dd35628","fields":{"slug":"/20190501TIL/","prefix":"2019-05-01","source":"posts"},"frontmatter":{"title":"Enum클래스,choices,classmethod 사용/django에서 테이블 이름 변경","category":"TIL"}},"next":{"id":"3116a4ab-b989-5d14-8455-a86b36f10b71","fields":{"slug":"/20190503TIL/","prefix":"2019-05-03","source":"posts"},"frontmatter":{"title":"DATABASE, python list에 접근하기, git stash","category":"TIL"}},"source":"posts"}}