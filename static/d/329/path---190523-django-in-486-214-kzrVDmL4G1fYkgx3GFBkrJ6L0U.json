{"data":{"post":{"id":"498c3548-10fa-53cc-a5f0-705022cc28af","html":"<h2>Django ‘in’</h2>\n<p>in은 해당 내용이 포함된 값을 filter로 찾아낼 때 주로 사용된다.\n입력 값의 형태는 순서형 자료(리스트, 튜플, 쿼리셋)를 사용할 수 있다.\n또한 문자열도 입력 가능하지만, 자주 사용되지는 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Topic<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>id__in<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#아이디 1, 5인 데이터를 추출</span>\nTopic<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name__in<span class=\"token operator\">=</span><span class=\"token string\">\"sers\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#name에 \"sers\"가 포함된 데이터를 모두 추출</span></code></pre></div>\n<p>쿼리셋을 입력값으로 주는 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">inner_qs <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name__cotains<span class=\"token operator\">=</span><span class=\"token string\">\"Kyle\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#먼저 찾으려는 쿼리셋 추출</span>\ntopics <span class=\"token operator\">=</span>Topic<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user__in<span class=\"token operator\">=</span>inner_qs<span class=\"token punctuation\">)</span> <span class=\"token comment\">#해당 쿼리셋을 저장한 변수를 입력</span></code></pre></div>\n<p>찾으려는 QuarySet을 value() 또는 values_list()로 한번더 데이터를 정리한 뒤 입력값으로 줄 경우에는 필\n드의 값은 하나의 필드값만 추출해줘야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">inner_qs <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name__cotains<span class=\"token operator\">=</span><span class=\"token string\">\"Kyle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#잘못된 방법.</span>\ninner_qs <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>name__cotains<span class=\"token operator\">=</span><span class=\"token string\">\"Kyle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#하나의 필드로만 추출해올 것</span>\ntopics <span class=\"token operator\">=</span>Topic<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user__in<span class=\"token operator\">=</span>inner_qs<span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/190523django-in/","prefix":"2019-05-23"},"frontmatter":{"title":"Django QuerySet in","author":"KyleXID","category":"Django","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/190523django-in/","prev":{"id":"409a604f-6a4e-5db3-a1d7-76c2090edb6f","fields":{"slug":"/20190522git_rebase/","prefix":"2019-05-22","source":"posts"},"frontmatter":{"title":"Git rebase","category":"GitHub"}},"next":{"id":"9a2aa644-b25e-502a-ba88-ea5c2e41b272","fields":{"slug":"/20190523TIL/","prefix":"2019-05-23","source":"posts"},"frontmatter":{"title":"20190523 TIL","category":"TIL"}},"source":"posts"}}