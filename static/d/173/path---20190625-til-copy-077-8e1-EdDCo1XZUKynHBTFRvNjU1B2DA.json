{"data":{"post":{"id":"e9d0784d-3020-524f-89ca-592d63ad9600","html":"<h3>파이썬 <a href=\"https://docs.python.org/2/library/time.html#time.time\"><code class=\"language-text\">time.time()</code></a></h3>\n<p>파이썬 <code class=\"language-text\">time.time()</code>은 우분투가 생성된 시점부터 지금까지의 시간을 초로 나타낸 함수이다.<br>\n파이썬 시간 계산의 기초가 된다.</p>\n<h3>장고에서 thread test를 할 때 test database를 읽어오지 못하는 이유</h3>\n<p>기존 <code class=\"language-text\">TestCase</code>대신 <code class=\"language-text\">TransactionTestCase</code>모듈을 import해서 쓰자.\nTestCase모듈은 데이터를 메모리에만 두고 실제 DB에 입력하지 않는다. Thread 테스트는 DB에 직접 접근하는 방식의 테스트이기 떄문에, <code class=\"language-text\">SetUp</code>에서 <code class=\"language-text\">TestCase</code>모듈을 통해 생성된 테스트DB를 확인 할 수 없는것이다.  </p>\n<p><code class=\"language-text\">TransactionTestCase</code>를 사용하여 해결할수있다.</p>\n<p><a href=\"https://stackoverflow.com/questions/10948537/database-errors-in-django-when-using-threading\">stackoverflow링크)thread database error-in-django</a></p>\n<h3>Race Condition 테스트</h3>\n<p>Thread를 통해 Race Condition 테스트를 구현하였다.<br>\n추후에 포스팅으로 한번 다시 정리하자.</p>\n<h3>장고에서 raw sql</h3>\n<ul>\n<li>장고에서 왠만하면 raw sql은 지양하자. ORM은 생산성이 높고, 단순 쿼리를 만들어내는 것에 더 나아가, 모델에 접근하여 업데이트를 할 때 유효성 검사와 보안을 제공한다.\n<a href=\"https://wayhome25.github.io/django/2017/08/01/tsd7-django-query-database2/\">초보몽키님 블로그</a></li>\n<li>raw sql을 사용 시 앱의 이식성이 떨어지고, 다른종류의 db로 마이그레이션이 어려워진다.\n(사실 서비스를 하면서 다른종류의 db로 옮겨간다는 것이 매우 극히 드문 일이긴 하다.)</li>\n<li>그렇다면 언제 사용하는게 좋을까?\nraw sql을 이용하여 코드가 월등히 간결해질때만 사용하자.</li>\n</ul>\n<h3>row lock을 하는 방법</h3>\n<ul>\n<li>주로 금융기관에서 사람이 몰리는 경우 데이터 정보차이를 메꾸려고 할때 사용한다.\n<a href=\"https://medium.com/@hakibenita/how-to-manage-concurrency-in-django-models-b240fed4ee2\">참고문서</a></li>\n</ul>\n<h3>파이썬 <code class=\"language-text\">str()</code>과 <code class=\"language-text\">repr()</code>의 차이</h3>\n<ul>\n<li>두 메서드 모두 객체의 문자열 표현을 나타내는데 사용이 된다.</li>\n<li><code class=\"language-text\">str()</code>은 일반 유저가 보기 좋게, 즉 이해할 수 있는 방식으로 나타내는 반면,<br>\n<code class=\"language-text\">repr()</code>은 객체의 공식적인 표현을 출력하며, 주로 디버깅/개발에 사용된다.\n<a href=\"https://www.geeksforgeeks.org/str-vs-repr-in-python/\">GeeksforGeeks</a></li>\n</ul>","fields":{"slug":"/20190625TIL (copy)/","prefix":"2019-06-25"},"frontmatter":{"title":"20190625 TIL","author":"KyleXID","category":"TIL","cover":{"childImageSharp":{"resize":{"src":"/static/django-logo-negative-1d528e2cb5fbc29ad16c74e5d883c371-160fa.png"}}}}},"authornote":{"id":"23c79ddc-82aa-5899-b07b-ef138c6177bc","html":"<p><strong>KyleXID</strong> 파이썬,장고를 기반으로 개발하고있는 백엔드 개발자입니다.<br>\n현재 P2P금융 업체에서 웹개발을 맡고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2287464308006637"}}}},"pageContext":{"slug":"/20190625TIL (copy)/","prev":{"id":"81a74847-8035-56f2-bb0e-6918248530e7","fields":{"slug":"/20190624TIL/","prefix":"2019-06-24","source":"posts"},"frontmatter":{"title":"20190624 TIL","category":"TIL"}},"next":{"id":"ea33759f-91a3-5ca3-aa52-2126c719a80d","fields":{"slug":"/20190625TIL/","prefix":"2019-06-25","source":"posts"},"frontmatter":{"title":"20190625 TIL","category":"TIL"}},"source":"posts"}}